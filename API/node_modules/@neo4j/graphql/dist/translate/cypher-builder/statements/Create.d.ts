import { CypherContext } from "../CypherContext";
import { Node } from "../references/Node";
import { Param } from "../references/Param";
import { Query } from "./Query";
import { ReturnStatementArgs } from "./Return";
declare type Params = Record<string, Param<any>>;
export declare class Create extends Query {
    private node;
    private matchPattern;
    private setParams;
    constructor(node: Node, params?: Params, parent?: Query);
    set(params: Params): this;
    cypher(context: CypherContext, childrenCypher: string): string;
    return(...args: ReturnStatementArgs): this;
    private composeSet;
}
export {};
//# sourceMappingURL=Create.d.ts.map